(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{164:function(t,s,a){"use strict";a.r(s);var n=a(20),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"pages-部署"}},[t._v("Pages 部署")]),t._v(" "),a("p",[t._v("GitHub Pages、GitLab Pages、Coding Pages")]),t._v(" "),a("h2",{attrs:{id:"github-pages-部署"}},[t._v("GitHub Pages 部署")]),t._v(" "),a("p",[t._v("GitHub Pages 默认开启gzip。")]),t._v(" "),a("h3",{attrs:{id:"scripts-命令行部署"}},[t._v("Scripts 命令行部署")]),t._v(" "),a("p",[t._v("说明： 将dist目录推送至远程origin库的gh-pages分支，也可是其它远程库（如：github），script属性下配置下述deploy命令，其中：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("echo aleyn.cn>>dist/CNAME , 表示在dist目录生成CNAME, 用于静态网页映射至自定义域名")])]),t._v(" "),a("li",[a("p",[t._v('gh-pages -d dist --remote origin , 表示将dist目录推送至远程origin库的gh-pages分支， 得安装本地 gh-pages包： "gh-pages": "^2.0.1"')])]),t._v(" "),a("li",[a("p",[t._v('rimraf dist , 表示删除dist目录，（此步骤可选，得安装本地 rimraf包： "rimraf": "^2.6.2" ）')])]),t._v(" "),a("li",[a("p",[t._v("关于gh-pages库，运行下述命令可以查看更多选项： gh-pages --help")])])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"deploy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo aleyn.cn>>dist/CNAME && gh-pages -d dist --remote origin && rimraf dist"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"deploy-sh-部署"}},[t._v("deploy.sh 部署")]),t._v(" "),a("p",[t._v("在项目内部，创建具有以下内容的deploy.sh（对突出显示的行进行适当注释），并运行它进行部署：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# abort on errors")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" -e\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编译项目输出至dist目录，如：我这里编译后输出至：www/@/.vuepress/dist/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build:www\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd到编译输出目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" www/@/.vuepress/dist/\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果您部署至自定义域名，则启用下述语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo 'www.example.com' > CNAME")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aleyn.cn'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" CNAME\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交本次修改")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" add -A\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deploy'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果您部署至： https://<USERNAME>.github.io/<REPO>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f https://github.com/aleynjs/aleyn.cn.git master:gh-pages\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果您部署至： https://<USERNAME>.github.io")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" -\n")])])]),a("h2",{attrs:{id:"gitlab-pages-and-gitlab-ci-部署"}},[t._v("GitLab Pages and GitLab CI 部署")]),t._v(" "),a("p",[t._v("GitLab Pages 默认未开启gzip。")]),t._v(" "),a("ol",[a("li",[t._v("项目根目录创建要部署的文件夹：public")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果你打算发布到 https://< USERNAME or GROUP>.gitlab.io/")])]),t._v(" "),a("li",[a("p",[t._v("如果你打算发布到 https://< USERNAME or GROUP>.gitlab.io/< REPO >/（也就是说你的仓库在 https://gitlab.com/< USERNAME >/< REPO >）")])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("在你项目的根目录下创建一个名为 .gitlab-ci.yml 的文件，无论何时你提交了更改，它都会帮助你自动构建和部署：")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("9.11.1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node_modules/\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm install\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run build\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("artifacts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" public\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("开启gzip，.gitlab-ci.yml 文件 script 命令下配置，未验证成功"),a("a",{attrs:{href:"https://gitlab.com/gitlab-org/gitlab-pages/issues/12",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitlab.com pages"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"netlify-部署"}},[t._v("Netlify 部署")]),t._v(" "),a("p",[t._v("Netlify 默认开启gzip。")]),t._v(" "),a("ol",[a("li",[t._v("在 Netlify 中, 创建一个新的 Github/GitLab 项目，使用以下设置：")])]),t._v(" "),a("ul",[a("li",[t._v("Build Command: npm run XXX 或者 yarn XXX 或者 不填")]),t._v(" "),a("li",[t._v("Publish directory: public 或者 dist")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("点击部署按钮即可！")])])])},[],!1,null,null,null);e.options.__file="gh-pages.md";s.default=e.exports}}]);